#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap_italian.h"

// Autoshift Macro
#define AS(keycode) &as LS(keycode) keycode     

// Layer definitions
#define BASE 0
#define SYM 1
#define MOUSE 2
#define SETTINGS 3
// -----------------

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};

/ {
	behaviors {
		// Enables holding the first mod-tap key
		// by performing a tap-release-hold sequence.
		// To use it: "&qt KEYCODE1 KEYCODE2"
		qt: quick_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "QUICK_TAP";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			bindings = <&kp>, <&kp>;
		};
		as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <165>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	};

	macros {
		// sometimes my device thinks a modifier is being held down
		// pressing all modifiers fixes it.
		unstick: unstick {
			label = "ZM_unstick";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
		};
	};

	combos {
		// Activate MOUSE layer when both outer thumb keys are held
		combo_mouse {
            timeout-ms = <200>;
            key-positions = <30 33>;
            bindings = <&mo MOUSE>;
    };
		// both left thumb keys
		combo_settings {
			timeout-ms = <200>;
			key-positions = <30 31>;
			bindings = <&mo SETTINGS>;
		};
		// left index & middle fingers (home-row)
		// hold control & space for Adobe workflow
		combo_ctrl_space {
			timeout-ms = <200>;
			key-positions = <12 13>;
			bindings = <&kp LC(SPACE)>;
			layers = <BASE>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		// Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
			AS(Q)   AS(W)   AS(F)   AS(P)   AS(B)          AS(J)   AS(L)   AS(U)   AS(Y)   AS(SEMI)
			AS(A)   AS(R)   AS(S)   AS(T)   AS(G)          AS(M)   AS(N)   AS(E)   AS(I)   AS(O)
			AS(Z)   AS(X)   AS(C)   AS(D)   AS(V)          AS(K)   AS(H)   AS(COMMA) AS(DOT) AS(SLASH)
							&lt SYM DEL &kp BSPC          &kp SPACE &lt FNC ENTER
			>;
		};

		// Numbers and high frequency symbols
		sym_layer {
			label = "Sym.";
			bindings = <
			&kp LC(X) &kp EXCL &kp LPAR &kp RPAR &kp BSLH		    &kp SLASH &kp N7 &kp N8 &kp N9 &kp KP_MINUS
			&kp LC(C) &kp LC(V) &kp LBRC &kp RBRC &kp HASH          &kp ASTRK AS(N4) AS(N5) &kp N6 &kp KP_PLUS
			&kp CARET &kp AMPS &kp LBKT &kp RBKT &kp PIPE 	        &kp DOT &kp N1 AS(N2) &kp N3 &kp KP_EQUAL
											&none &none       &kp RET &kp N0
			>;
		};

		// Function keys with modifiers
		mouse_layer {
            label = "Mouse";
            bindings = <
            &none   &none   &none   &kp MS_W_UP  &none                &none   &kp MS_WH_L   &kp MS_WH_R   &none   &none
            &none   &kp MS_LEFT  &kp MS_UP  &kp MS_RIGHT  &none       &none   &kp MS_BTN1   &kp MS_BTN2   &none   &none
            &none   &none   &kp MS_DOWN  &kp MS_W_DOWN  &none         &none   &kp MS_BTN3   &kp MS_BTN4   &kp MS_BTN5   &none
                           &none   &none   &none        &none   &none   &none
    >;
};

		// Used to change the keyboard's settings.
		settings_layer {
				label = "Sett.";
				bindings = <
				&bootloader &none &none &bt BT_CLR &bt BT_SEL 0               &bt BT_SEL 3 &none &unstick &none &bootloader 
				&none &none &none &none      &bt BT_SEL 1 						  &bt BT_SEL 4 &none &none &none &none
				&studio_unlock &none &none &none      &bt BT_SEL 2               &bt BT_SEL 5 &none &none &none &studio_unlock
										&none &none                         &none &none 
				>;
		};
	};
};